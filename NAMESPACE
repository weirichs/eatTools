S3method(asNumericIfPossible, logical)
S3method(asNumericIfPossible, numeric)
S3method(asNumericIfPossible, character)
S3method(asNumericIfPossible, factor)
S3method(asNumericIfPossible, data.frame)
export(set.col.type)
export(get.lmer.effects)
export(get.lmer.effects.forBootMer)
export(save.lmer.effects)
# eatModel usage
export(aggregateDataOld)
export(make.pseudo)
export(meanAgree)
export(meanKappa)
export(multiseq)
export(halveString)
export(gsubAll)
export(convertLabel)
export(mergeAttr)
export(num.to.cat)
export(createSpssSyntaxSnippet)
export(createLabelList)
export(copyScanSelection)

# eatRep usage
export(existsBackgroundVariables)
export(removePattern)
export(facToChar)
export(crop)
export(tableUnlist)
export(removeNumeric)
export(removeNonNumeric)
export(asNumericIfPossible)
export(tablePattern)
export(item.logit)
export(desk)
export(intGen)
export(wideToLong)
export(contr.wec.weighted)

### imports
# getlme4
import(lme4)
importMethodsFrom("Matrix",diag)
importFrom("methods",show, as)
importFrom("stats",vcov, runif, weighted.mean)
importFrom("utils", flush.console, sessionInfo)
importFrom("car",recode)
importFrom("plyr",rbind.fill)
importFrom("reshape2",melt,dcast)
importFrom("boot",boot.ci)
importFrom("stats", AIC, BIC, anova, logLik, median, na.omit, pnorm, sd, sigma, var, t.test, contr.treatment)
# eatModel tools
importFrom("Hmisc", wtd.table, wtd.mean, wtd.var)
importFrom("irr", agree, kappa2)
importFrom("combinat", combn)
importFrom("readxl", read_excel)

